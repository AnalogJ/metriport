name: Branch to Staging

# Used to manually deploy a branch to staging

on:
  workflow_dispatch: # manually executed by a user

jobs:
  widget:
    uses: ./.github/workflows/_reusable_deploy_cdk.yml
    with:
      build_env: "staging"
      deploy_env: "staging"
      cdk_stack: ${{ vars.WIDGET_STACK_NAME_STAGING }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.WIDGET_REGION_STAGING }}
      INFRA_CONFIG: ${{ secrets.INFRA_CONFIG_STAGING }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  api:
    uses: ./.github/workflows/_reusable_deploy_script.yml
    needs: [infra-and-lambdas]
    if: ${{ !failure() && needs.infra-and-lambdas.result == 'success' }}
    with:
      deploy_env: "staging"
      path: "api/app"
      script_name: "deploy-api.sh"
      ECR_REPO_URI: ${{ vars.ECR_REPO_URI_STAGING }}
      ECS_CLUSTER: ${{ vars.ECS_CLUSTER_STAGING }}
      ECS_SERVICE: ${{ vars.ECS_SERVICE_STAGING }}
      AWS_REGION: ${{ vars.API_REGION_STAGING }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  infra-and-lambdas:
    uses: ./.github/workflows/_reusable_deploy_cdk.yml
    with:
      deploy_env: "staging"
      cdk_stack: ${{ vars.API_STACK_NAME_STAGING }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.API_REGION_STAGING }}
      INFRA_CONFIG: ${{ secrets.INFRA_CONFIG_STAGING }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
