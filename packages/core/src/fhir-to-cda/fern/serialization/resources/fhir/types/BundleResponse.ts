/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const BundleResponse: core.serialization.ObjectSchema<
    serializers.fhir.BundleResponse.Raw,
    MetriportApi.fhir.BundleResponse
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    modifierExtension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    status: core.serialization.string().optional(),
    location: core.serialization.lazy(async () => (await import("../../..")).fhir.Uri).optional(),
    etag: core.serialization.string().optional(),
    lastModified: core.serialization.lazy(async () => (await import("../../..")).fhir.Instant).optional(),
    outcome: core.serialization.unknown(),
});

export declare namespace BundleResponse {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        modifierExtension?: serializers.fhir.Extension.Raw[] | null;
        status?: string | null;
        location?: serializers.fhir.Uri.Raw | null;
        etag?: string | null;
        lastModified?: serializers.fhir.Instant.Raw | null;
        outcome?: unknown;
    }
}
