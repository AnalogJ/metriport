/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const Contributor: core.serialization.ObjectSchema<
    serializers.fhir.Contributor.Raw,
    MetriportApi.fhir.Contributor
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    type: core.serialization.lazy(async () => (await import("../../..")).fhir.ContributorType).optional(),
    name: core.serialization.string().optional(),
    contact: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.ContactDetail))
        .optional(),
});

export declare namespace Contributor {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        type?: serializers.fhir.ContributorType.Raw | null;
        name?: string | null;
        contact?: serializers.fhir.ContactDetail.Raw[] | null;
    }
}
