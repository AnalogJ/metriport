/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const ParameterDefinition: core.serialization.ObjectSchema<
    serializers.fhir.ParameterDefinition.Raw,
    MetriportApi.fhir.ParameterDefinition
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    name: core.serialization.lazy(async () => (await import("../../..")).fhir.Code).optional(),
    use: core.serialization.lazy(async () => (await import("../../..")).fhir.Code).optional(),
    min: core.serialization.number().optional(),
    max: core.serialization.string().optional(),
    documentation: core.serialization.string().optional(),
    type: core.serialization.lazy(async () => (await import("../../..")).fhir.Code).optional(),
    profile: core.serialization.lazy(async () => (await import("../../..")).fhir.Canonical).optional(),
});

export declare namespace ParameterDefinition {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        name?: serializers.fhir.Code.Raw | null;
        use?: serializers.fhir.Code.Raw | null;
        min?: number | null;
        max?: string | null;
        documentation?: string | null;
        type?: serializers.fhir.Code.Raw | null;
        profile?: serializers.fhir.Canonical.Raw | null;
    }
}
