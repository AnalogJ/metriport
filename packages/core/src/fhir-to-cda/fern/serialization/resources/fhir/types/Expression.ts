/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const Expression: core.serialization.ObjectSchema<
    serializers.fhir.Expression.Raw,
    MetriportApi.fhir.Expression
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    description: core.serialization.string().optional(),
    name: core.serialization.lazy(async () => (await import("../../..")).fhir.Id).optional(),
    language: core.serialization.lazy(async () => (await import("../../..")).fhir.ExpressionLanguage).optional(),
    expression: core.serialization.string().optional(),
    reference: core.serialization.lazy(async () => (await import("../../..")).fhir.Uri).optional(),
});

export declare namespace Expression {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        description?: string | null;
        name?: serializers.fhir.Id.Raw | null;
        language?: serializers.fhir.ExpressionLanguage.Raw | null;
        expression?: string | null;
        reference?: serializers.fhir.Uri.Raw | null;
    }
}
