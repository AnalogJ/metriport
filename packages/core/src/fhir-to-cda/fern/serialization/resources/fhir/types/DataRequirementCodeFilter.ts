/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const DataRequirementCodeFilter: core.serialization.ObjectSchema<
    serializers.fhir.DataRequirementCodeFilter.Raw,
    MetriportApi.fhir.DataRequirementCodeFilter
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    modifierExtension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    path: core.serialization.string().optional(),
    searchParam: core.serialization.string().optional(),
    valueSet: core.serialization.lazy(async () => (await import("../../..")).fhir.Canonical).optional(),
    code: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Coding))
        .optional(),
});

export declare namespace DataRequirementCodeFilter {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        modifierExtension?: serializers.fhir.Extension.Raw[] | null;
        path?: string | null;
        searchParam?: string | null;
        valueSet?: serializers.fhir.Canonical.Raw | null;
        code?: serializers.fhir.Coding.Raw[] | null;
    }
}
