/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const RelatedArtifact: core.serialization.ObjectSchema<
    serializers.fhir.RelatedArtifact.Raw,
    MetriportApi.fhir.RelatedArtifact
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    type: core.serialization.lazy(async () => (await import("../../..")).fhir.RelatedArtifactType).optional(),
    label: core.serialization.string().optional(),
    display: core.serialization.string().optional(),
    citation: core.serialization.lazy(async () => (await import("../../..")).fhir.Markdown).optional(),
    url: core.serialization.lazy(async () => (await import("../../..")).fhir.Url).optional(),
    document: core.serialization.lazyObject(async () => (await import("../../..")).fhir.Attachment).optional(),
    resource: core.serialization.lazy(async () => (await import("../../..")).fhir.Canonical).optional(),
});

export declare namespace RelatedArtifact {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        type?: serializers.fhir.RelatedArtifactType.Raw | null;
        label?: string | null;
        display?: string | null;
        citation?: serializers.fhir.Markdown.Raw | null;
        url?: serializers.fhir.Url.Raw | null;
        document?: serializers.fhir.Attachment.Raw | null;
        resource?: serializers.fhir.Canonical.Raw | null;
    }
}
