/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const HumanName: core.serialization.ObjectSchema<serializers.fhir.HumanName.Raw, MetriportApi.fhir.HumanName> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        extension: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
            .optional(),
        use: core.serialization.lazy(async () => (await import("../../..")).fhir.HumanNameUse).optional(),
        text: core.serialization.string().optional(),
        family: core.serialization.string().optional(),
        given: core.serialization.list(core.serialization.string()).optional(),
        prefix: core.serialization.list(core.serialization.string()).optional(),
        suffix: core.serialization.list(core.serialization.string()).optional(),
        period: core.serialization.lazyObject(async () => (await import("../../..")).fhir.Period).optional(),
    });

export declare namespace HumanName {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        use?: serializers.fhir.HumanNameUse.Raw | null;
        text?: string | null;
        family?: string | null;
        given?: string[] | null;
        prefix?: string[] | null;
        suffix?: string[] | null;
        period?: serializers.fhir.Period.Raw | null;
    }
}
