/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const Attachment: core.serialization.ObjectSchema<
    serializers.fhir.Attachment.Raw,
    MetriportApi.fhir.Attachment
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    contentType: core.serialization.lazy(async () => (await import("../../..")).fhir.Code).optional(),
    language: core.serialization.lazy(async () => (await import("../../..")).fhir.Code).optional(),
    data: core.serialization.lazy(async () => (await import("../../..")).fhir.Base64Binary).optional(),
    url: core.serialization.lazy(async () => (await import("../../..")).fhir.Url).optional(),
    size: core.serialization.lazy(async () => (await import("../../..")).fhir.UnsignedInt).optional(),
    hash: core.serialization.lazy(async () => (await import("../../..")).fhir.Base64Binary).optional(),
    title: core.serialization.string().optional(),
    creation: core.serialization.lazy(async () => (await import("../../..")).fhir.DateTime).optional(),
});

export declare namespace Attachment {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        contentType?: serializers.fhir.Code.Raw | null;
        language?: serializers.fhir.Code.Raw | null;
        data?: serializers.fhir.Base64Binary.Raw | null;
        url?: serializers.fhir.Url.Raw | null;
        size?: serializers.fhir.UnsignedInt.Raw | null;
        hash?: serializers.fhir.Base64Binary.Raw | null;
        title?: string | null;
        creation?: serializers.fhir.DateTime.Raw | null;
    }
}
