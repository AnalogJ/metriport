/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const Identifier: core.serialization.ObjectSchema<
    serializers.fhir.Identifier.Raw,
    MetriportApi.fhir.Identifier
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    use: core.serialization.lazy(async () => (await import("../../..")).fhir.IdentifierUse).optional(),
    type: core.serialization.lazyObject(async () => (await import("../../..")).fhir.CodeableConcept).optional(),
    system: core.serialization.lazy(async () => (await import("../../..")).fhir.Uri).optional(),
    value: core.serialization.string().optional(),
    period: core.serialization.lazyObject(async () => (await import("../../..")).fhir.Period).optional(),
    assigner: core.serialization.lazyObject(async () => (await import("../../..")).fhir.Reference).optional(),
});

export declare namespace Identifier {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        use?: serializers.fhir.IdentifierUse.Raw | null;
        type?: serializers.fhir.CodeableConcept.Raw | null;
        system?: serializers.fhir.Uri.Raw | null;
        value?: string | null;
        period?: serializers.fhir.Period.Raw | null;
        assigner?: serializers.fhir.Reference.Raw | null;
    }
}
