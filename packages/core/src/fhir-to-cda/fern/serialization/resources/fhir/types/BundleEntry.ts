/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const BundleEntry: core.serialization.ObjectSchema<
    serializers.fhir.BundleEntry.Raw,
    MetriportApi.fhir.BundleEntry
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    modifierExtension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    link: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.BundleLink))
        .optional(),
    fullUrl: core.serialization.lazy(async () => (await import("../../..")).fhir.Uri).optional(),
    resource: core.serialization.unknown(),
    search: core.serialization.lazyObject(async () => (await import("../../..")).fhir.BundleSearch).optional(),
    request: core.serialization.lazyObject(async () => (await import("../../..")).fhir.BundleRequest).optional(),
    response: core.serialization.lazyObject(async () => (await import("../../..")).fhir.BundleResponse).optional(),
});

export declare namespace BundleEntry {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        modifierExtension?: serializers.fhir.Extension.Raw[] | null;
        link?: serializers.fhir.BundleLink.Raw[] | null;
        fullUrl?: serializers.fhir.Uri.Raw | null;
        resource?: unknown;
        search?: serializers.fhir.BundleSearch.Raw | null;
        request?: serializers.fhir.BundleRequest.Raw | null;
        response?: serializers.fhir.BundleResponse.Raw | null;
    }
}
