/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const Reference: core.serialization.ObjectSchema<serializers.fhir.Reference.Raw, MetriportApi.fhir.Reference> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        extension: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
            .optional(),
        reference: core.serialization.string().optional(),
        type: core.serialization.lazy(async () => (await import("../../..")).fhir.Uri).optional(),
        identifier: core.serialization.lazyObject(async () => (await import("../../..")).fhir.Identifier).optional(),
        display: core.serialization.string().optional(),
        resource: core.serialization.unknown(),
    });

export declare namespace Reference {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        reference?: string | null;
        type?: serializers.fhir.Uri.Raw | null;
        identifier?: serializers.fhir.Identifier.Raw | null;
        display?: string | null;
        resource?: unknown;
    }
}
