/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const CodeableConcept: core.serialization.ObjectSchema<
    serializers.fhir.CodeableConcept.Raw,
    MetriportApi.fhir.CodeableConcept
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    coding: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Coding))
        .optional(),
    text: core.serialization.string().optional(),
});

export declare namespace CodeableConcept {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        coding?: serializers.fhir.Coding.Raw[] | null;
        text?: string | null;
    }
}
