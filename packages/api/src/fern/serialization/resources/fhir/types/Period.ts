/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const Period: core.serialization.ObjectSchema<serializers.fhir.Period.Raw, MetriportApi.fhir.Period> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        extension: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
            .optional(),
        start: core.serialization.lazy(async () => (await import("../../..")).fhir.DateTime).optional(),
        end: core.serialization.lazy(async () => (await import("../../..")).fhir.DateTime).optional(),
    });

export declare namespace Period {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        start?: serializers.fhir.DateTime.Raw | null;
        end?: serializers.fhir.DateTime.Raw | null;
    }
}
