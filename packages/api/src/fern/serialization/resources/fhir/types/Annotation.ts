/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const Annotation: core.serialization.ObjectSchema<
    serializers.fhir.Annotation.Raw,
    MetriportApi.fhir.Annotation
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    authorReference: core.serialization.lazyObject(async () => (await import("../../..")).fhir.Reference).optional(),
    authorString: core.serialization.string().optional(),
    time: core.serialization.lazy(async () => (await import("../../..")).fhir.DateTime).optional(),
    text: core.serialization.lazy(async () => (await import("../../..")).fhir.Markdown).optional(),
});

export declare namespace Annotation {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        authorReference?: serializers.fhir.Reference.Raw | null;
        authorString?: string | null;
        time?: serializers.fhir.DateTime.Raw | null;
        text?: serializers.fhir.Markdown.Raw | null;
    }
}
