/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as MetriportApi from "../../../../api";
import * as core from "../../../../core";

export const DataRequirementDateFilter: core.serialization.ObjectSchema<
    serializers.fhir.DataRequirementDateFilter.Raw,
    MetriportApi.fhir.DataRequirementDateFilter
> = core.serialization.object({
    id: core.serialization.string().optional(),
    extension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    modifierExtension: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../..")).fhir.Extension))
        .optional(),
    path: core.serialization.string().optional(),
    searchParam: core.serialization.string().optional(),
    valueDateTime: core.serialization.string().optional(),
    valuePeriod: core.serialization.lazyObject(async () => (await import("../../..")).fhir.Period).optional(),
    valueDuration: core.serialization.lazyObject(async () => (await import("../../..")).fhir.Duration).optional(),
});

export declare namespace DataRequirementDateFilter {
    interface Raw {
        id?: string | null;
        extension?: serializers.fhir.Extension.Raw[] | null;
        modifierExtension?: serializers.fhir.Extension.Raw[] | null;
        path?: string | null;
        searchParam?: string | null;
        valueDateTime?: string | null;
        valuePeriod?: serializers.fhir.Period.Raw | null;
        valueDuration?: serializers.fhir.Duration.Raw | null;
    }
}
